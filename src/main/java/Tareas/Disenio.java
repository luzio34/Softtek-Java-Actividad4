/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Tareas;

import Interfaces.DaoTareaImplementacion;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Lucio
 */
public class Disenio extends javax.swing.JFrame {

    /**
     * Creates new form Disenio
     */
    public Disenio() {
        initComponents();
    }
    
    private void limpiar() {
        cajaTextoId.setText("");
        cajaTextoNombre.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRegistrar = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        list1 = new java.awt.List();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cajaTextoId = new javax.swing.JTextField();
        cajaTextoNombre = new javax.swing.JTextField();
        btnCompletar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnListar.setText("Actualizar lista");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        list1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Id de la tarea");

        jLabel2.setText("Nombre de la tarea");

        cajaTextoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cajaTextoNombreActionPerformed(evt);
            }
        });

        btnCompletar.setText("Marcar tarea como completada");
        btnCompletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(list1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cajaTextoNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cajaTextoId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)))
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRegistrar)
                            .addComponent(btnListar))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCompletar)
                                .addGap(0, 23, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEliminar)
                                .addGap(24, 24, 24)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cajaTextoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cajaTextoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListar)
                    .addComponent(btnCompletar))
                .addGap(22, 22, 22)
                .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
       
        DaoTareaImplementacion tarea_dao = new DaoTareaImplementacion();

        Tarea tarea = new Tarea();
        if (cajaTextoNombre.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese el registro que desea modificar");

        } else {
            //tenemos que obtener el id y el nombre de la caja de texto
            //int id = Integer.parseInt(cajaTextoId.getText());
            String nombre = cajaTextoNombre.getText();

            //tarea.setId(id);
            tarea.setNombreTarea(nombre);
            //seteamos el registro y se la pasamos al objeto empleado
            tarea_dao.registrar(tarea);
            JOptionPane.showMessageDialog(null, "Registro ingresado correctamente");
            limpiar();
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void cajaTextoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cajaTextoNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cajaTextoNombreActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        
        DaoTareaImplementacion tarea_dao = new DaoTareaImplementacion();
        Tarea tarea = new Tarea();

        if (cajaTextoId.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese el registro que desea Eliminar");
        } else {
            //tenemos que obtener el id y nombre de la caja de texto
            int id = Integer.parseInt(cajaTextoId.getText());
            tarea.setId(id);
            //Seteamos la eliminación y se la pasamos al objeto empleado
            tarea_dao.eliminar(tarea);
            JOptionPane.showMessageDialog(null, "Registro eliminado correctamente");
            limpiar();

        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        // Crear una instancia de la implementación del DAO de Tareas
        DaoTareaImplementacion tarea_dao = new DaoTareaImplementacion();

        // Obtener la lista de tareas desde la base de datos
        List<Tarea> listaTareas = tarea_dao.listarTodos();

        // Limpiar el contenido actual de list1
        list1.removeAll();

        // Recorrer la lista de tareas y agregarlas a list1
        for (Tarea tarea : listaTareas) {
            String completado = tarea.isCompletado() ? "Completado" : "No completado";
            list1.add("ID: " + tarea.getId() + " - Nombre: " + tarea.getNombreTarea()+ " - Estado: " + completado);
        }
        
        
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        
        DaoTareaImplementacion tarea_dao = new DaoTareaImplementacion();

        Tarea tarea = new Tarea();

        if (cajaTextoId.getText().equals("") || cajaTextoNombre.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese el registro que desea modificar");
        } else {
            int id = Integer.parseInt(cajaTextoId.getText());
            String nombre = cajaTextoNombre.getText();

            tarea.setId(id);
            tarea.setNombreTarea(nombre);
            tarea_dao.modificar(tarea);

            JOptionPane.showMessageDialog(null, "Registro modificado correctamente");
            limpiar();
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void list1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_list1ActionPerformed

    private void btnCompletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompletarActionPerformed
    String idTarea = cajaTextoId.getText();

    if (!idTarea.isEmpty()) {
        int id = Integer.parseInt(idTarea);
        DaoTareaImplementacion tarea_dao = new DaoTareaImplementacion();
         List<Tarea> listaTareas = tarea_dao.listarTodos();

        // Crea una nueva tarea con el ID proporcionado
        Tarea tareaCompletada = new Tarea();
        tareaCompletada.setId(id);
        tareaCompletada.setCompletado(true); // Cambia el estado a true

        // Llama al método modificar de DaoTareaImplementacion para actualizar la base de datos
        DaoTareaImplementacion tareaDao = new DaoTareaImplementacion();
        tareaDao.modificarEstadoCompletado(tareaCompletada);

        // Actualiza la visualización en la lista o donde sea necesario
        for (Tarea tarea : listaTareas) {
            if (tarea.getId() == id) {
                tarea.setCompletado(true);
            }
        }

        // Actualiza la visualización en la lista o donde sea necesario
        String estado = "Completado";
        list1.removeAll(); // Borra todos los elementos de la lista
        for (Tarea tarea : listaTareas) {
            list1.add("ID: " + tarea.getId() + " - Nombre: " + tarea.getNombreTarea() + " - Estado: " + (tarea.isCompletado() ? estado : "No completado"));
        }
    }
    }//GEN-LAST:event_btnCompletarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Disenio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Disenio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Disenio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Disenio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Disenio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCompletar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JTextField cajaTextoId;
    private javax.swing.JTextField cajaTextoNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private java.awt.List list1;
    // End of variables declaration//GEN-END:variables
}
